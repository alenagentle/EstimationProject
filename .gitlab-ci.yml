stages:
    - build jar
    - build image
    - pull configurations
    - push image

build:
  stage: build jar
  tags:
    - maven
  script:
    - mvn package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

docker:
  stage: build image
  services:
    - docker:19.03.12-dind
  tags:
    - docker-builder
  before_script:
    - update-ca-certificates
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest|| true
    - docker build --cache-from $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest
    - echo "$CI_COMMIT_BRANCH"
  only:
    - develop
    - master

git:
  stage: pull configurations
  tags:
    - git
  script:
    - update-ca-certificates
    - eval $(ssh-agent -s)
    - echo "$SSH_DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
    - ssh-keyscan gitlab.lan >> ~/.ssh/known_hosts
    - git clone git@gitlab.lan:devops/ansible.git
  artifacts:
    paths:
      - ansible
  only:
    - develop
    - master

deploy:
  stage: push image
  tags:
    - ansible
  script:
    - mkdir -p /etc/ansible/
    - mv ansible/$PROJECT_NAME/* .
    - cp deployment/ansible/ansible.cfg /etc/ansible/ansible.cfg
    - pip3 install docker-compose
    - ansible-playbook -i deployment/ansible/hosts deployment/ansible/deploy_app.yml -e "CI_COMMIT_BRANCH=$CI_COMMIT_BRANCH LOCATION=$LOCATION"
  only:
    - develop
    - master

